use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with brunch.io to recompile .js and .css sources.
config :corto, CortoWeb.Endpoint,
       url: [host: "localhost"],
       server: true,
       http: [port: 4000],
       secret_key_base: "JxjtZPXDRTady5IDPd8GxST5jrZxpITw/7qCl5isa3oYmcPz1W0P0yMahFsUzH0K",
       render_errors: [view: CortoWeb.ErrorView, accepts: ~w(json)],
       pubsub: [name: Corto.PubSub,
       cache_static_manifest: "priv/static/cache_manifest.json",
       adapter: Phoenix.PubSub.PG2]
# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# command from your terminal:
#
#     openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com" -keyout priv/server.key -out priv/server.pem
#
# The `http:` config above can be replaced with:
#
#     https: [port: 4000, keyfile: "priv/server.key", certfile: "priv/server.pem"],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20


config :corto,
       env: :dev

config :corto, Corto.Repo.Mnesia,
       host: :"corto@127.0.0.1"
       # host: {:system, :atom, "MNESIA_HOST", Kernel.node()}, FOR WHEN CREATING LOCALLY
       #storage_type: {:system, :atom, "MNESIA_STORAGE_TYPE", :disc_copies}

config :ecto_mnesia,
       host: :"corto@127.0.0.1"
       # host: {:system, :atom, "MNESIA_HOST", Kernel.node()}, FOR WHEN CREATING LOCALLY
       #storage_type: {:system, :atom, "MNESIA_STORAGE_TYPE", :disc_copies}


